<?xml version="1.0" encoding="UTF-8"?>

<configuration>
	<contextName>codelab</contextName>

	<!-- For status of logback console use this url => /LogbackViewStatusMessage -->
	<!-- *********************************************** Properties *********************************************** -->
	<property name="ENV_TYPE" value="DEV" />   			<!-- Development Environment -->

	<!-- <property name="ENV_TYPE" value="PRO" /> -->  <!-- Production Environment -->

	<property name="LOG_DIR" value="D:/logs/codelab" />

	<property resource="classpath:DB/mysql.jdbc.properties" />

	<timestamp key="timestamp" datePattern="dd.MMM.yyyy-HH.mm.ss"
		timeReference="contextBirth" />

	<!-- conversionWords : %t = %thread = Outputs the name of the thread that 
		generated the logging event. %c = %lo = %logger = Outputs the name of the 
		logger at the origin of the logging event %d = %date = Used to output the 
		date of the logging event %m = %msg = %message = Outputs the application-supplied 
		message associated with the logging event. %n = Outputs the platform dependent 
		line separator character or characters %p = %le = %level = Outputs the level 
		of the logging event. %r = %relative = Outputs the number of milliseconds 
		elapsed since the start of the application until the creation of the logging 
		event. for more info about conversionWord in pattern layout, visit : http://logback.qos.ch/manual/layouts.html#conversionWord -->

	<!-- ******************************************** Console Appender ******************************************** -->
	<if condition='property("ENV_TYPE").equals("DEV")'>
		<then>
			<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
				<encoder>
					<pattern>%-5level %-50logger - %msg%n%xException</pattern>
				</encoder>
			</appender>
			<root>
				<appender-ref ref="ERROR" />
			</root>
		</then>
	</if>

	<!-- ********************************************* File Appender ********************************************* -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_DIR}/CODELAB_FP_${timestamp}.log</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${LOG_DIR}/CODELAB_FP_${timestamp}_%i.log.zip
			</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>

		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>10MB</maxFileSize>
		</triggeringPolicy>

		<encoder>
			<!-- <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} 
				- %msg%n</pattern> -->
			<pattern>%d{HH:mm:ss.SSSS} [%X{REMOTE_ADDR} - %X{USER_NAME}] %-5level
				%logger - %msg%n%xException</pattern>
		</encoder>
	</appender>

	<!-- ********************************************* SMTP Appender ********************************************* -->
	<!-- <if condition='property("ENV_TYPE").equals("DEV")'> <then> -->
	<root>
		<appender-ref ref="EMAIL" />
	</root>

	<!-- </then> </if> -->


	<!-- ************************************************ Loggers ************************************************ -->

	<logger name="org.hibernate" level="warn" /> <!-- To show only warn/error log messages generated by Hibernate -->
	<logger name="org.springframework" level="warn" /> <!-- To show only warn/error log messages generated by Spring -->

	<!-- <logger name="org.hibernate.SQL" level="debug" /> --> <!-- logs the SQL statements -->
	<!-- <logger name="org.hibernate.type" level="trace" /> --> <!-- Logs the JDBC parameters passed to a query -->

	<!-- additivity="false" means parent of this logger will not get the log 
		events -->
	<!-- <logger name="com.his.pms.interceptor.AuditTrailInterceptor" additivity="false"> 
		<appender-ref ref="ATDB" /> </logger> -->

	<root level="error">
		<appender-ref ref="FILE" />

	</root>

</configuration>